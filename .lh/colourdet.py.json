{
    "sourceFile": "colourdet.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1637527273033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1637527280291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+#programming_fever\r\n+import cv2\r\n+import numpy as np\r\n+import pandas as pd\r\n+\r\n+\r\n+#function to calculate minimum distance from all colors and get the most matching color\r\n+def getColorName(R,G,B):\r\n+  minimum = 10000\r\n+  for i in range(len(csv)):\r\n+    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n+    if(d<=minimum):\r\n+      minimum = d\r\n+      cname = csv.loc[i,\"color_name\"]\r\n+  return cname\r\n+\r\n+#function to get x,y coordinates of mouse double click\r\n+def draw_function(event, x,y,flags,param):\r\n+  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n+    global b,g,r,xpos,ypos, clicked\r\n+    clicked = True\r\n+    xpos = x\r\n+    ypos = y\r\n+    b,g,r = img[y,x]\r\n+    b = int(b)\r\n+    g = int(g)\r\n+    r = int(r)\r\n+  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n+  #     clicked = True\r\n+  #     print('yo')\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+\r\n+  img_path = os.path.abspath(__file__) + \"palette.jpg\"\r\n+  img = cv2.imread(img_path)\r\n+  img = cv2.resize(img,(700,500))\r\n+\r\n+  clicked = False\r\n+  r = g = b = xpos = ypos = 0\r\n+\r\n+  #Reading csv file with pandas and giving names to each column\r\n+  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n+  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n+\r\n+  window_name = 'window'\r\n+  cv2.namedWindow(window_name)\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+  # cv2.setMouseCallback(window_name,rename_function)\r\n+\r\n+  while(1):\r\n+    cv2.imshow(window_name,img)\r\n+    if (clicked):\r\n+      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n+      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n+\r\n+      #Creating text string to display( Color name and RGB values )\r\n+      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n+\r\n+      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n+      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n+\r\n+      #For very light colours we will display text in black colour\r\n+      if(r+g+b>=600):\r\n+        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n+\r\n+      clicked=False\r\n+\r\n+    if cv2.waitKey(20) & 0xFF ==27:\r\n+      break\r\n+\r\n+    cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1637527286533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+#programming_fever\r\n+import cv2\r\n+import os\r\n+import numpy as np\r\n+import pandas as pd\r\n+\r\n+\r\n+#function to calculate minimum distance from all colors and get the most matching color\r\n+def getColorName(R,G,B):\r\n+  minimum = 10000\r\n+  for i in range(len(csv)):\r\n+    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n+    if(d<=minimum):\r\n+      minimum = d\r\n+      cname = csv.loc[i,\"color_name\"]\r\n+  return cname\r\n+\r\n+#function to get x,y coordinates of mouse double click\r\n+def draw_function(event, x,y,flags,param):\r\n+  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n+    global b,g,r,xpos,ypos, clicked\r\n+    clicked = True\r\n+    xpos = x\r\n+    ypos = y\r\n+    b,g,r = img[y,x]\r\n+    b = int(b)\r\n+    g = int(g)\r\n+    r = int(r)\r\n+  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n+  #     clicked = True\r\n+  #     print('yo')\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+\r\n+  img_path = os.path.abspath(__file__) + \"palette.jpg\"\r\n+  img = cv2.imread(img_path)\r\n+  img = cv2.resize(img,(700,500))\r\n+\r\n+  clicked = False\r\n+  r = g = b = xpos = ypos = 0\r\n+\r\n+  #Reading csv file with pandas and giving names to each column\r\n+  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n+  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n+\r\n+  window_name = 'window'\r\n+  cv2.namedWindow(window_name)\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+  # cv2.setMouseCallback(window_name,rename_function)\r\n+\r\n+  while(1):\r\n+    cv2.imshow(window_name,img)\r\n+    if (clicked):\r\n+      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n+      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n+\r\n+      #Creating text string to display( Color name and RGB values )\r\n+      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n+\r\n+      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n+      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n+\r\n+      #For very light colours we will display text in black colour\r\n+      if(r+g+b>=600):\r\n+        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n+\r\n+      clicked=False\r\n+\r\n+    if cv2.waitKey(20) & 0xFF ==27:\r\n+      break\r\n+\r\n+    cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1637527356449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n #programming_fever\r\n import cv2\r\n-import os\r\n-import numpy as np\r\n+import pathlibimport numpy as np\r\n import pandas as pd\r\n \r\n \r\n #function to calculate minimum distance from all colors and get the most matching color\r\n@@ -71,153 +70,5 @@\n \r\n     if cv2.waitKey(20) & 0xFF ==27:\r\n       break\r\n \r\n-    cv2.destroyAllWindows()\n-#programming_fever\r\n-import cv2\r\n-import numpy as np\r\n-import pandas as pd\r\n-\r\n-\r\n-#function to calculate minimum distance from all colors and get the most matching color\r\n-def getColorName(R,G,B):\r\n-  minimum = 10000\r\n-  for i in range(len(csv)):\r\n-    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n-    if(d<=minimum):\r\n-      minimum = d\r\n-      cname = csv.loc[i,\"color_name\"]\r\n-  return cname\r\n-\r\n-#function to get x,y coordinates of mouse double click\r\n-def draw_function(event, x,y,flags,param):\r\n-  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n-    global b,g,r,xpos,ypos, clicked\r\n-    clicked = True\r\n-    xpos = x\r\n-    ypos = y\r\n-    b,g,r = img[y,x]\r\n-    b = int(b)\r\n-    g = int(g)\r\n-    r = int(r)\r\n-  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n-  #     clicked = True\r\n-  #     print('yo')\r\n-\r\n-\r\n-if __name__ == \"__main__\":\r\n-\r\n-  img_path = os.path.abspath(__file__) + \"palette.jpg\"\r\n-  img = cv2.imread(img_path)\r\n-  img = cv2.resize(img,(700,500))\r\n-\r\n-  clicked = False\r\n-  r = g = b = xpos = ypos = 0\r\n-\r\n-  #Reading csv file with pandas and giving names to each column\r\n-  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n-  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n-\r\n-  window_name = 'window'\r\n-  cv2.namedWindow(window_name)\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-  # cv2.setMouseCallback(window_name,rename_function)\r\n-\r\n-  while(1):\r\n-    cv2.imshow(window_name,img)\r\n-    if (clicked):\r\n-      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n-      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n-\r\n-      #Creating text string to display( Color name and RGB values )\r\n-      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n-\r\n-      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n-      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n-\r\n-      #For very light colours we will display text in black colour\r\n-      if(r+g+b>=600):\r\n-        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n-\r\n-      clicked=False\r\n-\r\n-    if cv2.waitKey(20) & 0xFF ==27:\r\n-      break\r\n-\r\n-    cv2.destroyAllWindows()\n-#programming_fever\r\n-import cv2\r\n-import numpy as np\r\n-import pandas as pd\r\n-\r\n-\r\n-#function to calculate minimum distance from all colors and get the most matching color\r\n-def getColorName(R,G,B):\r\n-  minimum = 10000\r\n-  for i in range(len(csv)):\r\n-    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n-    if(d<=minimum):\r\n-      minimum = d\r\n-      cname = csv.loc[i,\"color_name\"]\r\n-  return cname\r\n-\r\n-#function to get x,y coordinates of mouse double click\r\n-def draw_function(event, x,y,flags,param):\r\n-  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n-    global b,g,r,xpos,ypos, clicked\r\n-    clicked = True\r\n-    xpos = x\r\n-    ypos = y\r\n-    b,g,r = img[y,x]\r\n-    b = int(b)\r\n-    g = int(g)\r\n-    r = int(r)\r\n-  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n-  #     clicked = True\r\n-  #     print('yo')\r\n-\r\n-\r\n-if __name__ == \"__main__\":\r\n-\r\n-  img_path = os.path.abspath(__file__)\"C://Users//omare//Google Drive//Dev//Trendineer//Colour Detection//OpenCV-Projects//color detection//palette.jpg\"\r\n-  img = cv2.imread(img_path)\r\n-  img = cv2.resize(img,(700,500))\r\n-\r\n-  clicked = False\r\n-  r = g = b = xpos = ypos = 0\r\n-\r\n-  #Reading csv file with pandas and giving names to each column\r\n-  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n-  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n-\r\n-  window_name = 'window'\r\n-  cv2.namedWindow(window_name)\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-  # cv2.setMouseCallback(window_name,rename_function)\r\n-\r\n-  while(1):\r\n-    cv2.imshow(window_name,img)\r\n-    if (clicked):\r\n-      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n-      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n-\r\n-      #Creating text string to display( Color name and RGB values )\r\n-      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n-\r\n-      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n-      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n-\r\n-      #For very light colours we will display text in black colour\r\n-      if(r+g+b>=600):\r\n-        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n-\r\n-      clicked=False\r\n-\r\n-    if cv2.waitKey(20) & 0xFF ==27:\r\n-      break\r\n-\r\n     cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1637527363242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n #programming_fever\r\n import cv2\r\n-import pathlibimport numpy as np\r\n+import pathlib\r\n+import numpy as np\r\n import pandas as pd\r\n \r\n \r\n #function to calculate minimum distance from all colors and get the most matching color\r\n"
                },
                {
                    "date": 1637527397619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+#programming_fever\r\n+import cv2\r\n+import os\r\n+os.path.abspath(os.getcwd())import numpy as np\r\n+import pandas as pd\r\n+\r\n+\r\n+#function to calculate minimum distance from all colors and get the most matching color\r\n+def getColorName(R,G,B):\r\n+  minimum = 10000\r\n+  for i in range(len(csv)):\r\n+    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n+    if(d<=minimum):\r\n+      minimum = d\r\n+      cname = csv.loc[i,\"color_name\"]\r\n+  return cname\r\n+\r\n+#function to get x,y coordinates of mouse double click\r\n+def draw_function(event, x,y,flags,param):\r\n+  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n+    global b,g,r,xpos,ypos, clicked\r\n+    clicked = True\r\n+    xpos = x\r\n+    ypos = y\r\n+    b,g,r = img[y,x]\r\n+    b = int(b)\r\n+    g = int(g)\r\n+    r = int(r)\r\n+  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n+  #     clicked = True\r\n+  #     print('yo')\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+\r\n+  img_path = pathlib.Path().resolve() + \"palette.jpg\"\r\n+  img = cv2.imread(img_path)\r\n+  img = cv2.resize(img,(700,500))\r\n+\r\n+  clicked = False\r\n+  r = g = b = xpos = ypos = 0\r\n+\r\n+  #Reading csv file with pandas and giving names to each column\r\n+  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n+  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n+\r\n+  window_name = 'window'\r\n+  cv2.namedWindow(window_name)\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+  # cv2.setMouseCallback(window_name,rename_function)\r\n+\r\n+  while(1):\r\n+    cv2.imshow(window_name,img)\r\n+    if (clicked):\r\n+      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n+      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n+\r\n+      #Creating text string to display( Color name and RGB values )\r\n+      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n+\r\n+      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n+      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n+\r\n+      #For very light colours we will display text in black colour\r\n+      if(r+g+b>=600):\r\n+        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n+\r\n+      clicked=False\r\n+\r\n+    if cv2.waitKey(20) & 0xFF ==27:\r\n+      break\r\n+\r\n+    cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1637527404897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+#programming_fever\r\n+import cv2\r\n+import os\r\n+import numpy as np\r\n+import pandas as pd\r\n+\r\n+\r\n+#function to calculate minimum distance from all colors and get the most matching color\r\n+def getColorName(R,G,B):\r\n+  minimum = 10000\r\n+  for i in range(len(csv)):\r\n+    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n+    if(d<=minimum):\r\n+      minimum = d\r\n+      cname = csv.loc[i,\"color_name\"]\r\n+  return cname\r\n+\r\n+#function to get x,y coordinates of mouse double click\r\n+def draw_function(event, x,y,flags,param):\r\n+  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n+    global b,g,r,xpos,ypos, clicked\r\n+    clicked = True\r\n+    xpos = x\r\n+    ypos = y\r\n+    b,g,r = img[y,x]\r\n+    b = int(b)\r\n+    g = int(g)\r\n+    r = int(r)\r\n+  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n+  #     clicked = True\r\n+  #     print('yo')\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+\r\n+  img_path = os.path.abspath(os.getcwd()) + \"palette.jpg\"\r\n+  img = cv2.imread(img_path)\r\n+  img = cv2.resize(img,(700,500))\r\n+\r\n+  clicked = False\r\n+  r = g = b = xpos = ypos = 0\r\n+\r\n+  #Reading csv file with pandas and giving names to each column\r\n+  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n+  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n+\r\n+  window_name = 'window'\r\n+  cv2.namedWindow(window_name)\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+  # cv2.setMouseCallback(window_name,rename_function)\r\n+\r\n+  while(1):\r\n+    cv2.imshow(window_name,img)\r\n+    if (clicked):\r\n+      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n+      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n+\r\n+      #Creating text string to display( Color name and RGB values )\r\n+      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n+\r\n+      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n+      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n+\r\n+      #For very light colours we will display text in black colour\r\n+      if(r+g+b>=600):\r\n+        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n+\r\n+      clicked=False\r\n+\r\n+    if cv2.waitKey(20) & 0xFF ==27:\r\n+      break\r\n+\r\n+    cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1637527420887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+#programming_fever\r\n+import cv2\r\n+import os\r\n+import numpy as np\r\n+import pandas as pd\r\n+\r\n+\r\n+#function to calculate minimum distance from all colors and get the most matching color\r\n+def getColorName(R,G,B):\r\n+  minimum = 10000\r\n+  for i in range(len(csv)):\r\n+    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n+    if(d<=minimum):\r\n+      minimum = d\r\n+      cname = csv.loc[i,\"color_name\"]\r\n+  return cname\r\n+\r\n+#function to get x,y coordinates of mouse double click\r\n+def draw_function(event, x,y,flags,param):\r\n+  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n+    global b,g,r,xpos,ypos, clicked\r\n+    clicked = True\r\n+    xpos = x\r\n+    ypos = y\r\n+    b,g,r = img[y,x]\r\n+    b = int(b)\r\n+    g = int(g)\r\n+    r = int(r)\r\n+  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n+  #     clicked = True\r\n+  #     print('yo')\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+\r\n+  img_path = os.path.abspath(os.getcwd()) + \"\\\\palette.jpg\"\r\n+  img = cv2.imread(img_path)\r\n+  img = cv2.resize(img,(700,500))\r\n+\r\n+  clicked = False\r\n+  r = g = b = xpos = ypos = 0\r\n+\r\n+  #Reading csv file with pandas and giving names to each column\r\n+  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n+  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n+\r\n+  window_name = 'window'\r\n+  cv2.namedWindow(window_name)\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+  # cv2.setMouseCallback(window_name,rename_function)\r\n+\r\n+  while(1):\r\n+    cv2.imshow(window_name,img)\r\n+    if (clicked):\r\n+      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n+      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n+\r\n+      #Creating text string to display( Color name and RGB values )\r\n+      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n+\r\n+      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n+      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n+\r\n+      #For very light colours we will display text in black colour\r\n+      if(r+g+b>=600):\r\n+        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n+\r\n+      clicked=False\r\n+\r\n+    if cv2.waitKey(20) & 0xFF ==27:\r\n+      break\r\n+\r\n+    cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1637527434524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+#programming_fever\r\n+import cv2\r\n+import os\r\n+import numpy as np\r\n+import pandas as pd\r\n+\r\n+\r\n+#function to calculate minimum distance from all colors and get the most matching color\r\n+def getColorName(R,G,B):\r\n+  minimum = 10000\r\n+  for i in range(len(csv)):\r\n+    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n+    if(d<=minimum):\r\n+      minimum = d\r\n+      cname = csv.loc[i,\"color_name\"]\r\n+  return cname\r\n+\r\n+#function to get x,y coordinates of mouse double click\r\n+def draw_function(event, x,y,flags,param):\r\n+  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n+    global b,g,r,xpos,ypos, clicked\r\n+    clicked = True\r\n+    xpos = x\r\n+    ypos = y\r\n+    b,g,r = img[y,x]\r\n+    b = int(b)\r\n+    g = int(g)\r\n+    r = int(r)\r\n+  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n+  #     clicked = True\r\n+  #     print('yo')\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+\r\n+  img_path = os.path.abspath(os.getcwd()) + \"\\\\palette.jpg\"\r\n+  img = cv2.imread(img_path)\r\n+  img = cv2.resize(img,(700,500))\r\n+\r\n+  clicked = False\r\n+  r = g = b = xpos = ypos = 0\r\n+\r\n+  #Reading csv file with pandas and giving names to each column\r\n+  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n+  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n+\r\n+  window_name = 'window'\r\n+  cv2.namedWindow(window_name)\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+\r\n+  cv2.setMouseCallback(window_name,draw_function)\r\n+  # cv2.setMouseCallback(window_name,rename_function)\r\n+\r\n+  while(1):\r\n+    cv2.imshow(window_name,img)\r\n+    if (clicked):\r\n+      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n+      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n+\r\n+      #Creating text string to display( Color name and RGB values )\r\n+      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n+\r\n+      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n+      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n+\r\n+      #For very light colours we will display text in black colour\r\n+      if(r+g+b>=600):\r\n+        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n+\r\n+      clicked=False\r\n+\r\n+    if cv2.waitKey(20) & 0xFF ==27:\r\n+      break\r\n+\r\n+    cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1637527451662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,305 +71,5 @@\n \r\n     if cv2.waitKey(20) & 0xFF ==27:\r\n       break\r\n \r\n-    cv2.destroyAllWindows()\n-#programming_fever\r\n-import cv2\r\n-import os\r\n-import numpy as np\r\n-import pandas as pd\r\n-\r\n-\r\n-#function to calculate minimum distance from all colors and get the most matching color\r\n-def getColorName(R,G,B):\r\n-  minimum = 10000\r\n-  for i in range(len(csv)):\r\n-    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n-    if(d<=minimum):\r\n-      minimum = d\r\n-      cname = csv.loc[i,\"color_name\"]\r\n-  return cname\r\n-\r\n-#function to get x,y coordinates of mouse double click\r\n-def draw_function(event, x,y,flags,param):\r\n-  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n-    global b,g,r,xpos,ypos, clicked\r\n-    clicked = True\r\n-    xpos = x\r\n-    ypos = y\r\n-    b,g,r = img[y,x]\r\n-    b = int(b)\r\n-    g = int(g)\r\n-    r = int(r)\r\n-  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n-  #     clicked = True\r\n-  #     print('yo')\r\n-\r\n-\r\n-if __name__ == \"__main__\":\r\n-\r\n-  img_path = os.path.abspath(os.getcwd()) + \"\\\\palette.jpg\"\r\n-  img = cv2.imread(img_path)\r\n-  img = cv2.resize(img,(700,500))\r\n-\r\n-  clicked = False\r\n-  r = g = b = xpos = ypos = 0\r\n-\r\n-  #Reading csv file with pandas and giving names to each column\r\n-  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n-  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n-\r\n-  window_name = 'window'\r\n-  cv2.namedWindow(window_name)\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-  # cv2.setMouseCallback(window_name,rename_function)\r\n-\r\n-  while(1):\r\n-    cv2.imshow(window_name,img)\r\n-    if (clicked):\r\n-      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n-      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n-\r\n-      #Creating text string to display( Color name and RGB values )\r\n-      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n-\r\n-      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n-      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n-\r\n-      #For very light colours we will display text in black colour\r\n-      if(r+g+b>=600):\r\n-        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n-\r\n-      clicked=False\r\n-\r\n-    if cv2.waitKey(20) & 0xFF ==27:\r\n-      break\r\n-\r\n-    cv2.destroyAllWindows()\n-#programming_fever\r\n-import cv2\r\n-import os\r\n-import numpy as np\r\n-import pandas as pd\r\n-\r\n-\r\n-#function to calculate minimum distance from all colors and get the most matching color\r\n-def getColorName(R,G,B):\r\n-  minimum = 10000\r\n-  for i in range(len(csv)):\r\n-    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n-    if(d<=minimum):\r\n-      minimum = d\r\n-      cname = csv.loc[i,\"color_name\"]\r\n-  return cname\r\n-\r\n-#function to get x,y coordinates of mouse double click\r\n-def draw_function(event, x,y,flags,param):\r\n-  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n-    global b,g,r,xpos,ypos, clicked\r\n-    clicked = True\r\n-    xpos = x\r\n-    ypos = y\r\n-    b,g,r = img[y,x]\r\n-    b = int(b)\r\n-    g = int(g)\r\n-    r = int(r)\r\n-  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n-  #     clicked = True\r\n-  #     print('yo')\r\n-\r\n-\r\n-if __name__ == \"__main__\":\r\n-\r\n-  img_path = os.path.abspath(os.getcwd()) + \"palette.jpg\"\r\n-  img = cv2.imread(img_path)\r\n-  img = cv2.resize(img,(700,500))\r\n-\r\n-  clicked = False\r\n-  r = g = b = xpos = ypos = 0\r\n-\r\n-  #Reading csv file with pandas and giving names to each column\r\n-  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n-  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n-\r\n-  window_name = 'window'\r\n-  cv2.namedWindow(window_name)\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-  # cv2.setMouseCallback(window_name,rename_function)\r\n-\r\n-  while(1):\r\n-    cv2.imshow(window_name,img)\r\n-    if (clicked):\r\n-      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n-      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n-\r\n-      #Creating text string to display( Color name and RGB values )\r\n-      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n-\r\n-      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n-      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n-\r\n-      #For very light colours we will display text in black colour\r\n-      if(r+g+b>=600):\r\n-        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n-\r\n-      clicked=False\r\n-\r\n-    if cv2.waitKey(20) & 0xFF ==27:\r\n-      break\r\n-\r\n-    cv2.destroyAllWindows()\n-#programming_fever\r\n-import cv2\r\n-import os\r\n-os.path.abspath(os.getcwd())import numpy as np\r\n-import pandas as pd\r\n-\r\n-\r\n-#function to calculate minimum distance from all colors and get the most matching color\r\n-def getColorName(R,G,B):\r\n-  minimum = 10000\r\n-  for i in range(len(csv)):\r\n-    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n-    if(d<=minimum):\r\n-      minimum = d\r\n-      cname = csv.loc[i,\"color_name\"]\r\n-  return cname\r\n-\r\n-#function to get x,y coordinates of mouse double click\r\n-def draw_function(event, x,y,flags,param):\r\n-  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n-    global b,g,r,xpos,ypos, clicked\r\n-    clicked = True\r\n-    xpos = x\r\n-    ypos = y\r\n-    b,g,r = img[y,x]\r\n-    b = int(b)\r\n-    g = int(g)\r\n-    r = int(r)\r\n-  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n-  #     clicked = True\r\n-  #     print('yo')\r\n-\r\n-\r\n-if __name__ == \"__main__\":\r\n-\r\n-  img_path = pathlib.Path().resolve() + \"palette.jpg\"\r\n-  img = cv2.imread(img_path)\r\n-  img = cv2.resize(img,(700,500))\r\n-\r\n-  clicked = False\r\n-  r = g = b = xpos = ypos = 0\r\n-\r\n-  #Reading csv file with pandas and giving names to each column\r\n-  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n-  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n-\r\n-  window_name = 'window'\r\n-  cv2.namedWindow(window_name)\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-  # cv2.setMouseCallback(window_name,rename_function)\r\n-\r\n-  while(1):\r\n-    cv2.imshow(window_name,img)\r\n-    if (clicked):\r\n-      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n-      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n-\r\n-      #Creating text string to display( Color name and RGB values )\r\n-      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n-\r\n-      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n-      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n-\r\n-      #For very light colours we will display text in black colour\r\n-      if(r+g+b>=600):\r\n-        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n-\r\n-      clicked=False\r\n-\r\n-    if cv2.waitKey(20) & 0xFF ==27:\r\n-      break\r\n-\r\n-    cv2.destroyAllWindows()\n-#programming_fever\r\n-import cv2\r\n-import pathlib\r\n-import numpy as np\r\n-import pandas as pd\r\n-\r\n-\r\n-#function to calculate minimum distance from all colors and get the most matching color\r\n-def getColorName(R,G,B):\r\n-  minimum = 10000\r\n-  for i in range(len(csv)):\r\n-    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n-    if(d<=minimum):\r\n-      minimum = d\r\n-      cname = csv.loc[i,\"color_name\"]\r\n-  return cname\r\n-\r\n-#function to get x,y coordinates of mouse double click\r\n-def draw_function(event, x,y,flags,param):\r\n-  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n-    global b,g,r,xpos,ypos, clicked\r\n-    clicked = True\r\n-    xpos = x\r\n-    ypos = y\r\n-    b,g,r = img[y,x]\r\n-    b = int(b)\r\n-    g = int(g)\r\n-    r = int(r)\r\n-  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n-  #     clicked = True\r\n-  #     print('yo')\r\n-\r\n-\r\n-if __name__ == \"__main__\":\r\n-\r\n-  img_path = os.path.abspath(__file__) + \"palette.jpg\"\r\n-  img = cv2.imread(img_path)\r\n-  img = cv2.resize(img,(700,500))\r\n-\r\n-  clicked = False\r\n-  r = g = b = xpos = ypos = 0\r\n-\r\n-  #Reading csv file with pandas and giving names to each column\r\n-  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n-  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n-\r\n-  window_name = 'window'\r\n-  cv2.namedWindow(window_name)\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-\r\n-  cv2.setMouseCallback(window_name,draw_function)\r\n-  # cv2.setMouseCallback(window_name,rename_function)\r\n-\r\n-  while(1):\r\n-    cv2.imshow(window_name,img)\r\n-    if (clicked):\r\n-      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n-      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n-\r\n-      #Creating text string to display( Color name and RGB values )\r\n-      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n-\r\n-      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n-      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n-\r\n-      #For very light colours we will display text in black colour\r\n-      if(r+g+b>=600):\r\n-        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n-\r\n-      clicked=False\r\n-\r\n-    if cv2.waitKey(20) & 0xFF ==27:\r\n-      break\r\n-\r\n     cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1637527474542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,5 +71,5 @@\n \r\n     if cv2.waitKey(20) & 0xFF ==27:\r\n       break\r\n \r\n-    cv2.destroyAllWindows()\n\\ No newline at end of file\n+  cv2.destroyAllWindows()\n\\ No newline at end of file\n"
                }
            ],
            "date": 1637527273033,
            "name": "Commit-0",
            "content": "#programming_fever\r\nimport cv2\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\n\r\n#function to calculate minimum distance from all colors and get the most matching color\r\ndef getColorName(R,G,B):\r\n  minimum = 10000\r\n  for i in range(len(csv)):\r\n    d = abs(R- int(csv.loc[i,\"R\"])) + abs(G- int(csv.loc[i,\"G\"]))+ abs(B- int(csv.loc[i,\"B\"]))\r\n    if(d<=minimum):\r\n      minimum = d\r\n      cname = csv.loc[i,\"color_name\"]\r\n  return cname\r\n\r\n#function to get x,y coordinates of mouse double click\r\ndef draw_function(event, x,y,flags,param):\r\n  if event == cv2.EVENT_LBUTTONDBLCLK:\r\n    global b,g,r,xpos,ypos, clicked\r\n    clicked = True\r\n    xpos = x\r\n    ypos = y\r\n    b,g,r = img[y,x]\r\n    b = int(b)\r\n    g = int(g)\r\n    r = int(r)\r\n  # if event == cv2.EVENT_RBUTTONDBLCLK:\r\n  #     clicked = True\r\n  #     print('yo')\r\n\r\n\r\nif __name__ == \"__main__\":\r\n\r\n  img_path = os.path.abspath(__file__)\"C://Users//omare//Google Drive//Dev//Trendineer//Colour Detection//OpenCV-Projects//color detection//palette.jpg\"\r\n  img = cv2.imread(img_path)\r\n  img = cv2.resize(img,(700,500))\r\n\r\n  clicked = False\r\n  r = g = b = xpos = ypos = 0\r\n\r\n  #Reading csv file with pandas and giving names to each column\r\n  index=[\"color\",\"color_name\",\"hex\",\"R\",\"G\",\"B\"]\r\n  csv = pd.read_csv('colors2.csv', names=index, header=None)\r\n\r\n  window_name = 'window'\r\n  cv2.namedWindow(window_name)\r\n  cv2.setMouseCallback(window_name,draw_function)\r\n\r\n  cv2.setMouseCallback(window_name,draw_function)\r\n  # cv2.setMouseCallback(window_name,rename_function)\r\n\r\n  while(1):\r\n    cv2.imshow(window_name,img)\r\n    if (clicked):\r\n      #cv2.rectangle(image, startpoint, endpoint, color, thickness)-1 fills entire rectangle \r\n      cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)\r\n\r\n      #Creating text string to display( Color name and RGB values )\r\n      text = getColorName(r,g,b) + ' R='+ str(r) +  ' G='+ str(g) +  ' B='+ str(b)\r\n\r\n      #cv2.putText(img,text,start,font(0-7),fontScale,color,thickness,lineType )\r\n      cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)\r\n\r\n      #For very light colours we will display text in black colour\r\n      if(r+g+b>=600):\r\n        cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)\r\n\r\n      clicked=False\r\n\r\n    if cv2.waitKey(20) & 0xFF ==27:\r\n      break\r\n\r\n    cv2.destroyAllWindows()"
        }
    ]
}